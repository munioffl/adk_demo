import streamlit as st
import google.generativeai as genai

GEMINI_API_KEY = st.secrets.get("GEMINI_API_KEY")

if not GEMINI_API_KEY:
    print("Error: GEMINI_API_KEY not found in Streamlit secrets. Please add it to .streamlit/secrets.toml.")
    # You might want to raise an exception here or handle it appropriately
else:
    try:
        genai.configure(api_key=GEMINI_API_KEY)
        print("Gemini API Key configured successfully.")
    except Exception as e:
        print(f"Error configuring Gemini API Key: {e}")

def generate_text_from_gemini(prompt_text: str) -> str:
    """
    Generates text using the Gemini API based on the provided prompt.

    Args:
        prompt_text: The prompt to send to the Gemini API.

    Returns:
        The text generated by the Gemini API, or an error message.
    """
    if not GEMINI_API_KEY:
        return "Error: Gemini API key not configured."

    try:
        model = genai.GenerativeModel('gemini-2.0-flash') # Or your preferred model
        response = model.generate_content(prompt_text)
        return response.text
    except Exception as e:
        print(f"Error interacting with Gemini API: {e}")
        return f"Error: Could not generate text from Gemini. {e}"

